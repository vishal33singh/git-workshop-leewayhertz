{"version":3,"sources":["modules/login/loginComponent.js","modules/login/index.js","services/auth0Service.js","modules/common/model.js"],"names":["LoginComponent","props","state","onChangeEvent","onLoginClicked","handleRememberMe","reSendVerificationMail","useState","showEmailIcon","setShowEmailIcon","showPassIcon","setShowPassIcon","disabled","setDisabled","buttonColor","setbuttonColor","iconState","setIconState","passShow","setPassShow","useEffect","email","password","className","src","alt","title","handleClose","message","open","modal","type","value","placeholder","onChange","ev","target","error","emailError","onClick","style","color","passwordError","rememberMe","checked","to","e","isLoading","Login","validateLoginForm","length","setState","Utils","validateEmail","isPasswordValid","a","parseResponse","resendEmailVerification","response","checkVerificatioStatus","dispatchAction","eventConstants","SHOW_LOADER","checkIfVerified","HIDE_LOADER","verified","handleChange","name","sessionManager","setDataInCookies","REMEMBER_ME","event","preventDefault","authObject","AuthService","signin","res","LOGIN_SUCCESS","history","push","Pages","DASHBOARD","forgotEmail","forgotEmailError","isPasswordVisible","getDataFromCookies","userDetails","USER_DETAILS","accessToken","removeAllData","JSON","parse","this","BaseComponent","connect","user","Auth0Service","auth0","WebAuth","domain","process","clientID","audience","redirectUri","scope","responseType","grantType","username","_this","Promise","resolve","reject","client","login","realm","err","authResult","userInfo","userId","sub","split","getUserInfo","idToken","UserModel","image","picture","Modal","class"],"mappings":"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","file":"static/js/5.703d01e9.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Model from \"../common/model\";\nfunction LoginComponent(props) {\n  const {\n    state,\n    onChangeEvent,\n    onLoginClicked,\n    handleRememberMe,\n    reSendVerificationMail,\n  } = props;\n\n  // const buttonColor =\n  //   \"grid place-items-center mt-12.5 py-6 text-ft4  text-white w-full rounded-full font-OpenSansSemiBold\";\n\n  const [showEmailIcon, setShowEmailIcon] = useState(false);\n  const [showPassIcon, setShowPassIcon] = useState(false);\n  const [disabled, setDisabled] = useState(true);\n  const [buttonColor, setbuttonColor] = useState(\n    \"grid place-items-center bg-darkGrey-50 mt-12.5 py-6 text-ft4  text-white w-full rounded-full font-OpenSansSemiBold\"\n  );\n\n  const [iconState, setIconState] = useState(false);\n  const [passShow, setPassShow] = useState(\"password\");\n  const passVisible = () => {\n    if (passShow === \"password\") {\n      setPassShow(\"text\");\n      setIconState(true);\n    }\n    if (passShow === \"text\") {\n      setPassShow(\"password\");\n      setIconState(false);\n    }\n  };\n\n  useEffect(() => {\n    if (state.email) setShowEmailIcon(true);\n    else setShowEmailIcon(false);\n  }, [state.email]);\n\n  useEffect(() => {\n    if (state.password) setShowPassIcon(true);\n    else setShowPassIcon(false);\n  }, [state.password]);\n\n  useEffect(() => {\n    if (state?.email && state?.password) {\n      setbuttonColor(\n        \"bg-blue-50 mt-12.5 py-6 text-ft4  text-white w-full rounded-full font-OpenSansSemiBold\"\n      );\n      setDisabled(false);\n    } else {\n      setbuttonColor(\n        \"bg-darkGrey-50 mt-12.5 py-6 text-ft4  text-white w-full rounded-full font-OpenSansSemiBold\"\n      );\n      setDisabled(true);\n    }\n  }, [state?.email && state?.password]);\n\n  const emailClear = () => {\n    onChangeEvent(\"email\", \"\");\n  };\n\n  return (\n    <div className=\" bg-Slate-200 pt-28 h-screen \">\n      <div className=\"w-125  bg-white text-center  m-auto rounded-lg px-5  pb-12.5\">\n        <img src=\"/images/img-logo.png\" alt=\"\" className=\"mx-auto pt-12.5 \" />\n        <h1 className=\"text-ft7 font-OpenSansSemiBold pt-7.5\">\n          Login with nft ticketing\n        </h1>\n\n        <Model\n          title=\"Resend Verification Mail\"\n          handleClose={() => reSendVerificationMail()}\n          message=\"Your email is not verified\"\n          open={state.modal}\n        />\n        <div className=\"bg-Slate-50 w-full mt-10 rounded-lg flex justify-between\">\n          <input\n            type=\"email\"\n            value={state && state.email}\n            placeholder=\"Email Address\"\n            className=\" py-5 pl-5 text-ft4 w-full rounded-lg  bg-Slate-50 placeholder-darkGrey-100 text-black-50 font-OpenSansRegular focus:outline-none\"\n            onChange={(ev) => onChangeEvent(\"email\", ev.target.value)}\n            error={state ? state.emailError : \"\"}\n          />\n          <img\n            alt=\"\"\n            src=\"/images/ic-clear.svg\"\n            className={`pr-5 ${!showEmailIcon && \"hidden\"}`}\n            onClick={emailClear}\n          />\n        </div>\n        <div style={{ color: \"red\" }}>{state?.emailError}</div>\n        <div className=\"bg-Slate-50 w-full mt-4 rounded-lg flex justify-between items-center\">\n          <input\n            type={passShow}\n            value={state && state.password}\n            placeholder=\"Password\"\n            className=\"bg-Slate-50 w-full rounded-lg py-5 text-ft4  pl-5 placeholder-darkGrey-100  text-black-50 font-OpenSansRegular focus:outline-none\"\n            onChange={(ev) => onChangeEvent(\"password\", ev.target.value)}\n            error={state ? state.passwordError : \"\"}\n          />\n\n          <img\n            alt=\"\"\n            src={\n              iconState\n                ? \"/images/ic-preview.svg\"\n                : \"/images/ic-preview-1@2x.png\"\n            }\n            className={`pr-5 ${!showPassIcon && \"hidden \"} w-11.25 h-6.5 `}\n            onClick={passVisible}\n          />\n        </div>\n        <div style={{ color: \"red\" }}>{state?.passwordError}</div>\n\n        <div className=\"flex justify-between flex-row pt-7.5\">\n          <div className=\" flex\">\n            <input\n              type=\"checkbox\"\n              className=\"w-5 h-5 \"\n              value={state.rememberMe}\n              onChange={(ev) => handleRememberMe(ev.target.checked)}\n            />\n            <p className=\"font-OpenSansRegular text-ft4 text-darkGrey-100 pl-2.5\">\n              Remember me\n            </p>\n          </div>\n          <p className=\"font-OpenSansRegular text-ft4 text-darkGrey-100 \">\n            <Link to=\"/forget-password\">Forgot password?</Link>\n          </p>\n        </div>\n        {state.passwordError ? (\n          <div className=\"error\">{state.passwordError ? <br /> : \"\"}</div>\n        ) : (\n          <div className=\"errorBox\">{state.passwordError ? <br /> : \"\"}</div>\n        )}\n        <button\n          type=\"submit\"\n          // className={`${buttonColor} ${(showEmailIcon && showPassIcon) ? \"bg-blue-50\" : \"bg-darkGrey-50\"}`}\n          onClick={(e) => onLoginClicked(e)}\n          disabled={disabled}\n          className={buttonColor}\n        >\n          {state.isLoading ? <div className=\"loader \"></div> : \"Sign in\"}\n        </button>\n        {/* {state.passwordError} */}\n        {/*<p className=\"mt-12.5 text-ft4 font-OpenSansRegular pb-12.5\">*/}\n        {/*  Don't have an account?{\" \"}*/}\n        {/*  <Link*/}\n        {/*    to=\"/create-account\"*/}\n        {/*    className=\"font-OpenSansSemiBold text-blue-50 underline\"*/}\n        {/*  >*/}\n        {/*    I want to create an account*/}\n        {/*  </Link>*/}\n        {/*</p>*/}\n      </div>\n    </div>\n  );\n}\n\nexport default LoginComponent;\n","import React from \"react\";\nimport BaseComponent from \"../baseComponent\";\nimport LoginComponent from \"./loginComponent\";\n\nimport Utils, { dispatchAction } from \"../../utility\";\nimport { history } from \"../../managers/history\";\nimport { eventConstants, Pages } from \"../../constants\";\nimport AuthService from \"../../services/auth0Service\";\nimport { sessionManager } from \"../../managers/sessionManager\";\nimport { connect } from \"react-redux\";\nimport { checkIfVerified, resendEmailVerification } from \"../../services/user\";\n\nclass Login extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.state = {\n      forgotEmail: \"\",\n      forgotEmailError: \"\",\n      email: \"\",\n      emailError: \"\",\n      password: \"\",\n      passwordError: \"\",\n      isPasswordVisible: false,\n      modal: false,\n      isLoading:false,\n      rememberMe: sessionManager.getDataFromCookies(eventConstants.REMEMBER_ME)\n      ? true\n      : false,\n    };\n  }\n\n  \n  componentDidMount() {\n    if (sessionManager.getDataFromCookies(eventConstants.REMEMBER_ME)) {\n    let userDetails = sessionManager.getDataFromCookies(\n      eventConstants.USER_DETAILS\n    );\n    const accessToken = sessionManager.getDataFromCookies(\n      eventConstants.USER_DETAILS\n    );\n    if (!userDetails || !accessToken) {\n      sessionManager.removeAllData();\n      return;\n    }\n    userDetails = JSON.parse(userDetails);\n    this.props.dispatchAction(eventConstants.LOGIN_SUCCESS, {\n      userDetails,\n      accessToken,\n    });\n    history.push(Pages.DASHBOARD);\n  }\n  }\n  validateLoginForm = () => {\n    if (!this.state.email.length) {\n      this.setState({\n        emailError: \"Please enter the email address\",\n      });\n    } else {\n      this.setState({\n        emailError: Utils.validateEmail(this.state.email)\n          ? \"\"\n          : \"Please enter the valid email address\",\n      });\n    }\n\n    if (!this.state.password.length) {\n      this.setState({\n        passwordError: \"Please enter your password\",\n      });\n    } else {\n      this.setState({\n        passwordError: Utils.isPasswordValid(this.state.password)\n          ? \"\"\n          : \"Please enter the valid password\",\n      });\n    }\n\n    return (\n      Utils.validateEmail(this.state.email) &&\n      Utils.isPasswordValid(this.state.password)\n    );\n  };\n\n  \n\n  reSendVerificationMail = async () => {\n    const [error, response] = await Utils.parseResponse(\n      resendEmailVerification({\n        email: this.state.email,\n      })\n    );\n    if (error) {\n      return;\n    }\n    if (error || !response) return;\n    this.setState({ modal: false });\n  };\n\n  checkVerificatioStatus = async (email) => {\n    this.props.dispatchAction(eventConstants.SHOW_LOADER, true);\n\n    const [error, response] = await Utils.parseResponse(\n      checkIfVerified({\n        email,\n      })\n    );\n    if (error) {\n      return;\n    }\n    this.props.dispatchAction(eventConstants.HIDE_LOADER, true);\n    if (error || !response) return true;\n    this.setState({ modal: !response.verified });\n    return response.verified;\n  };\n\n  handleChange = (name, value) => {\n    this.setState({ [name]: value });\n    if (this.state.passwordError) {\n      this.setState({ passwordError: \"\" });\n    }\n    if(this.state.emailError) {\n      this.setState({emailError: \"\"})\n    }\n  };\n  handleRememberMe = (value) => {\n    if (value) {\n      sessionManager.setDataInCookies(value, eventConstants.REMEMBER_ME);\n    } else sessionManager.setDataInCookies(\"\", eventConstants.REMEMBER_ME);\n    this.setState({ rememberMe: value });\n  };\n\n  onLoginClicked = async (event) => {\n    event.preventDefault();\n    if (!this.validateLoginForm()) return;\n    this.setState({isLoading: true})\n    let status = await this.checkVerificatioStatus(this.state.email,this.state.password);\n    if (!status) {\n      return;\n    }\n    this.authObject = new AuthService();\n    let [error, res] = await Utils.parseResponse(\n      this.authObject.signin(this.state.email, this.state.password)\n    );\n    if (!res || error) {\n\n      this.setState({isLoading: false})\n      this.setState({ \n            emailError:\"User doesn't exist\"  });\n      return;\n    }\n    if (res) {\n      this.props.dispatchAction(eventConstants.LOGIN_SUCCESS, res);\n      this.setState({isLoading: false})\n      return history.push(Pages.DASHBOARD);\n    }\n  };\n\n  render() {\n    return (\n      <LoginComponent\n        state={this.state}\n        reSendVerificationMail={this.reSendVerificationMail}\n        onChangeEvent={this.handleChange}\n        onLoginClicked={this.onLoginClicked}\n        handleRememberMe={this.handleRememberMe}\n\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    user: state.user,\n  };\n};\n\nexport default connect(mapStateToProps, { dispatchAction })(Login);\n","import auth0 from \"auth0-js\";\nimport { history } from \"../managers/history\";\nimport { UserModel } from \"../models/user\";\nimport { getUserInfo } from \"./user\";\nexport default class Auth0Service {\n  constructor() {\n    this.auth0 = new auth0.WebAuth({\n      domain: process.env.REACT_APP_AUTH0_DOMAIN,\n      clientID: process.env.REACT_APP_AUTH0_CLIENT_ID,\n      audience: process.env.REACT_APP_AUTH0_AUDIENCE,\n      redirectUri: process.env.REACT_APP_AUTH0_REDIRECT_URI,\n      scope: process.env.REACT_APP_AUTH0_SCOPE,\n      responseType: process.env.REACT_APP_AUTH0_RESPONSE_TYPE,\n      grantType: process.env.REACT_APP_AUTH0_GRANT_TYPE,\n    });\n  }\n\n  signin(username, password) {\n    let _this = this;\n    return new Promise((resolve, reject) => {\n      this.auth0.client.login(\n        { realm: \"Username-Password-Authentication\", username, password },\n        function (err, authResult) {\n          if (err) {\n            return reject(err);\n          }\n          // setSession(authResult);\n          _this.auth0.client.userInfo(\n            authResult.accessToken,\n            async (err, user) => {\n              if (err) {\n                return reject(err);\n              }\n              const userId = user.sub.split(\"auth0|\")[1];\n              try {\n                const userDetails = await getUserInfo(userId);\n                if (!userDetails) {\n                  throw \"User not found\";\n                }\n                resolve({\n                  accessToken: authResult.idToken,\n                  userDetails: new UserModel({\n                    ...userDetails,\n                    image: userDetails.image ? userDetails.image : user.picture,\n                  }),\n                });\n              } catch (err) {\n                reject(err);\n              }\n            }\n          );\n        }\n      );\n    });\n  }\n\n  logout() {\n    // this.auth0.logout({\n    //   returnTo: process.env.REACT_APP_WEBAPP_URL,\n    // });\n    history.push(\"/\");\n  }\n}\n","import React from \"react\";\n\nfunction Modal({ title, handleClose, message, open }) {\n  return open ? (\n    <div class=\"fixed inset-0  bg-darkGrey-100 bg-opacity-70 flex justify-center pt-48\">\n      <div className=\" absolute z-10 flex flex-col justify-center w-125 bg-white rounded-lg -mx-5 pt-1\">\n        <h1 className=\"font-OpenSansSemiBold text-ft7 text-black-50 pt-12.5\">\n          {title}\n        </h1>\n        <p className=\"pt-5 font-OpenSansRegular text-ft4 text-darkGrey-100 px-16.75\">\n          {message}\n        </p>\n        <button\n          className=\" bg-blue-50 mt-7.5 py-6 text-ft4 text-white rounded-full font-OpenSansSemiBold mx-12.5 mb-12.5\"\n          onClick={() => handleClose()}\n        >\n          Proceed\n        </button>\n      </div>\n    </div>\n  ) : (\n    \"\"\n  );\n}\n\nexport default Modal;\n"],"sourceRoot":""}