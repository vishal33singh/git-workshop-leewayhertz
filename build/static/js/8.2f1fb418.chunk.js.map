{"version":3,"sources":["modules/login/modal.js","modules/login/createAccount.js"],"names":["Modal","reSendVerificationMail","modalShow","proceedToUpdatePassword","class","className","onClick","CreateAccount","useState","name","setName","user","setUser","email","setEmail","error","setError","organizationName","setOrganizationName","termsAccepted","setTermsAccepted","isLoading","dispatch","useDispatch","buttonColor","setModalShow","signUpAdmin","a","data","organization","role","RoleConstant","ORGANISER","type","eventConstants","SHOW_LOADER","Utils","parseResponse","signUp","response","HIDE_LOADER","resendEmailVerification","history","push","Pages","UPDATE_PASSWORD","_id","src","alt","value","placeholder","onChange","ev","target","style","color","eve","checked","disabled","to"],"mappings":"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","file":"static/js/8.2f1fb418.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction Modal({ reSendVerificationMail, modalShow, proceedToUpdatePassword}) {\n  return (\n    <>\n      {modalShow ? (\n        <div class=\"fixed inset-0  bg-darkGrey-100 bg-opacity-70 flex justify-center pt-44\">\n          <div className=\" absolute z-10 flex flex-col justify-center w-125 bg-white rounded-lg -mx-5 pt-1\">\n            <h1 className=\"font-OpenSansSemiBold text-ft7 text-black-50 pt-12.5\">\n              Verify your email address\n            </h1>\n            <p className=\"pt-5 font-OpenSansRegular text-ft4 text-darkGrey-100 px-16.75\">\n              Go to your email and confirm your email address and enter your\n              temporary password\n            </p>\n            <p className=\"pt-12.5 font-OpenSansRegular text-ft4 text-darkGrey-100\">\n              Didnâ€™t receive the confirmation?\n            </p>\n            <button\n              className=\" bg-blue-50 mt-7.5 py-6 text-ft4 text-white rounded-full font-OpenSansSemiBold mx-12.5 mb-12.5\"\n              onClick={() => reSendVerificationMail()}\n            >\n              Re-send email verification\n            </button>\n\n            <button\n                className=\"bg-blue-50 mt-2.5 py-6 text-ft4 text-white rounded-full font-OpenSansSemiBold mx-12.5 mb-12.5\"\n                onClick={() => proceedToUpdatePassword()}\n            >\n              Proceed\n            </button>\n          </div>\n        </div>\n      ) : null}\n    </>\n  );\n}\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport Modal from \"./modal\";\nimport { Link } from \"react-router-dom\";\nimport Utils from \"../../utility\";\nimport { Pages, RoleConstant } from \"../../constants\";\nimport { signUp, resendEmailVerification } from \"../../services/user\";\nimport { history } from \"../../managers/history\";\nimport { eventConstants } from \"../../constants\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport {useDispatch} from \"react-redux\"\nfunction CreateAccount() {\n  const [name, setName] = useState(\"\");\n  const [user, setUser] = useState({});\n  const [email, setEmail] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [organizationName, setOrganizationName] = useState(\"\");\n  const [termsAccepted, setTermsAccepted] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const dispatch = useDispatch()\n  const buttonColor =\n    name && email && organizationName && termsAccepted\n      ? \"bg-blue-50\"\n      : \"bg-darkGrey-50\";\n  const [modalShow, setModalShow] = useState(false);\n\n  const iconShown = \"pr-5 hidden\";\n\n  const signUpAdmin = async () => {\n    //  this.props.dispatchAction(eventConstants.SHOW_LOADER, true);\n    \n    if (!name || !email || !organizationName) {\n      setError(\"Please provide required field\");\n      return;\n    }\n    const data = {\n      email,\n      name,\n      organization: {\n        name: organizationName,\n      },\n      role: RoleConstant.ORGANISER,\n    };\n   dispatch({type: eventConstants.SHOW_LOADER, data: true})\n    const [error, response] = await Utils.parseResponse(signUp(data));\n   dispatch({type: eventConstants.HIDE_LOADER, data: false})\n\n    // setIsLoading(false)\n    if (error) {\n      setError(error);\n      return;\n    }\n    //  this.props.dispatchAction(eventConstants.HIDE_LOADER, true);\n    if (error || !response) return;\n    setUser(response);\n    setModalShow(true);\n  };\n\n  const reSendVerificationMail = async () => {\n    //  this.props.dispatchAction(eventConstants.SHOW_LOADER, true);\n    if (!email) {\n      setError(\"Please provide required field\");\n      return;\n    }\n    const [error, response] = await Utils.parseResponse(\n      resendEmailVerification({\n        email,\n      })\n    );\n    if (error) {\n      setError(error);\n      return;\n    }\n    //  this.props.dispatchAction(eventConstants.HIDE_LOADER, true);\n    if (error || !response) return;\n    // setModalShow(false);\n    // history.push(`${Pages.UPDATE_PASSWORD}/${user._id}`);\n  };\n\n  const proceedToUpdatePassword = async () => {\n    setModalShow(false);\n    history.push(`${Pages.UPDATE_PASSWORD}/${user._id}`);\n  }\n\n  return (\n    <div className=\" bg-Slate-200 pt-28 h-screen\">\n      {isLoading && <div className=\"screenloader\"><CircularProgress/></div>}\n      <div className=\"w-125  bg-white text-center  m-auto rounded-lg px-5\">\n        <img\n          src=\"/images/img-logo.png\"\n          alt=\"\"\n          className=\"mx-auto pt-12.5\"\n        ></img>\n        {modalShow ? (\n          <Modal\n            reSendVerificationMail={reSendVerificationMail}\n            modalShow={modalShow}\n            proceedToUpdatePassword={proceedToUpdatePassword}\n          />\n        ) : null}\n        <h1 className=\"text-ft7 font-OpenSansSemiBold mt-7.5\">\n          Create an account\n        </h1>\n        <form>\n          <div className=\"bg-Slate-50 w-full mt-10 rounded-lg flex justify-between\">\n            <input\n              value={name}\n              type=\"text\"\n              placeholder=\"Full Name\"\n              className=\"bg-Slate-50 w-full rounded-lg py-5 pl-5 text-ft4 placeholder-darkGrey-100 text-black-50 font-OpenSansRegular focus:outline-none \"\n              onChange={(ev) => {\n                if (error) {\n                  setError(\"\");\n                }\n                setName(ev.target.value);\n              }}\n            ></input>\n            <img\n              alt=\"\"\n              src=\"/images/ic-clear.svg\"\n              className={iconShown}\n              onClick={() => setName(\"\")}\n            ></img>\n          </div>\n          <div className=\"bg-Slate-50 w-full mt-4 rounded-lg flex justify-between\">\n            <input\n              value={email}\n              type=\"email\"\n              placeholder=\"Email Address\"\n              className=\"bg-Slate-50 w-full rounded-lg py-5 pl-5 text-ft4 placeholder-darkGrey-100 text-black-50 font-OpenSansRegular focus:outline-none\"\n              onChange={(ev) => {\n                if (error) {\n                  setError(\"\");\n                }\n                setEmail(ev.target.value);\n              }}\n            ></input>\n            <img\n              alt=\"\"\n              src=\"/images/ic-clear.svg\"\n              className={iconShown}\n              onClick={() => setEmail(\"\")}\n            ></img>\n          </div>\n             <div style={{color:\"red\"}}> {error? error:\"\"}</div>\n          <div className=\"bg-Slate-50 w-full mt-4 rounded-lg flex justify-between\">\n            <input\n              value={organizationName}\n              type=\"text\"\n              placeholder=\"Organization Name\"\n              className=\"bg-Slate-50 rounded-md w-full py-5 pl-5 text-ft4 placeholder-darkGrey-100 text-darkGrey-100 font-OpenSansRegular focus:outline-none\"\n              onChange={(ev) => {\n                if (error) {\n                  setError(\"\");\n                }\n                setOrganizationName(ev.target.value);\n              }}\n            ></input>\n            <img\n              alt=\"\"\n              src=\"/images/ic-clear.svg\"\n              className={iconShown}\n              onClick={() => setOrganizationName(\"\")}\n            ></img>\n          </div>\n          <div className=\"flex flex-row pt-7.5\">\n            <div className=\" flex\">\n              <input\n                type=\"checkbox\"\n                className=\"w-5 h-5 \"\n                value={name && email && organizationName && termsAccepted}\n                onChange={(eve) => setTermsAccepted(eve.target.checked)}\n              ></input>\n              <p className=\"font-OpenSansRegular text-ft4 text-darkGrey-100 pl-2.5\">\n                I agree all statements in terms of service\n              </p>\n            </div>\n          </div>\n          <button\n            type=\"button\"\n            className={\n              \"mt-12.5 py-6 text-ft4  text-white w-full rounded-full font-OpenSansSemiBold \" +\n              buttonColor\n            }\n            onClick={() => {\n              signUpAdmin();\n            }}\n            disabled={!termsAccepted || !name || !email || !organizationName}\n          >\n            Create account\n          </button>\n        </form>\n        <p className=\"mt-12.5 text-ft4 font-OpenSansRegular pb-12.5\">\n          <Link to=\"/\" className=\"font-OpenSansSemiBold text-blue-50 \">\n            I already have an account\n          </Link>\n        </p>\n      </div>\n    </div>\n  );\n}\n\nexport default CreateAccount;\n"],"sourceRoot":""}